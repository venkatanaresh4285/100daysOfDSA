1.Linkedlist Introduction

#include<bits/stdc++.h>
using namespace std;
struct Node{
  int data;
  Node* next;
  Node(int data1,Node* next1){
    data=data1;
    next=next1;
  }
   Node(int data1){
    data=data1;
    next=nullptr;
  }
};
int main(){
  vector<int> arr={2,3,4,5,6};
  Node* y= new Node(arr[3]);
  cout<<y->data;
}



2.Convert Array to Linkedlist

#include<bits/stdc++.h>
using namespace std;
struct Node{
    int data;
    Node* next;
  Node(int data1){
    data=data1;
    next=nullptr;
  }
    
};
Node* ArraytoLL(vector<int> &arr){
  Node* head=new Node(arr[0]);  // 1 2 3 4 5 
  Node* mover=head;
  for(int i=1;i<arr.size();i++){
      Node* temp=new Node(arr[i]);  
      mover->next=temp;
    mover=temp;
  }
  return head;
}
int main(){
  vector<int> arr={1,2,3,4,5};
  Node* head=ArraytoLL(arr);
  cout<<head->data;
}


3)Traversing Linkedlist

#include<bits/stdc++.h>
using namespace std;
struct Node{
    int data;
    Node* next;
  Node(int data1){
    data=data1;
    next=nullptr;
  }
    
};
Node* ArraytoLL(vector<int> &arr){
  Node* head=new Node(arr[0]);  // 1 2 3 4 5 
  Node* mover=head;
  for(int i=1;i<arr.size();i++){
      Node* temp=new Node(arr[i]);  
      mover->next=temp;
    mover=temp;
  }
  return head;
}
int main(){
  vector<int> arr={1,2,3,4,5};
  Node* head=ArraytoLL(arr);
  Node* temp=head;
  while(temp!=nullptr){
    cout<<temp->data<<" ";
    temp=temp->next;
   
  }
}
